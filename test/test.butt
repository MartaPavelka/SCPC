#!/bin/bash

declare -i i=0
declare status=
declare -a outlines=()
declare -a errlines=()
declare -r scpc="python scpc.py"

jupyter nbconvert --to python scpc.ipynb >/dev/null 2>&1
chmod +x scpc.py

#######################################
i+=1
start "help"
  debug "$scpc --help"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "Usage: scpc.py [options]"
end
#######################################
i+=1
start "test --property invalid value"
  debug "$scpc --property invalid"
  assert_equal "$status" 2
  assert_startwith "${errlines[0]}" "Usage: scpc.py [options]"
end
#######################################
i+=1
start "test invalid input"
  debug "echo 'a b c' | $scpc"
  assert_equal "$status" 2
  assert_startwith "${errlines[0]}" "Invalid input, <class 'ValueError'> occurred."
end
#######################################
i+=1
start "test non-consecutive input matrix"
  debug "echo '0 1 2
  3 4 5
  6 7 8' | $scpc"
  assert_equal "$status" 2
  assert_startwith "${errlines[0]}" "Input matrix does not contain a consecutive set from 1 to n."
  debug "echo '1 2 3
  3 4 5
  3 4 8' | $scpc"
  assert_equal "$status" 2
  assert_startwith "${errlines[0]}" "Input matrix does not contain a consecutive set from 1 to n."
end
#######################################
i+=1
start "test default python matrix"
  declare default="1 2
1 3
2 3
2 4
3 4
3 5
4 5
4 6
5 6
1 5
1 6
2 6"

  debug "echo '$default' | $scpc -p under-closed"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p semi-closed"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 6], [3, 6], [3, 5], [5, 6], [4, 6], [4, 5], [1, 5], [1, 4], [2, 4]]"

  debug "echo '$default' | $scpc -p weakly-closed"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$default' | $scpc -p chordal"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p closed"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p unit-interval"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$default' | $scpc -p hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$default' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$default' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"
end
#######################################
i+=1
start "test default php matrix"
  declare default="1 2 3 4
1 3 4 5
1 2 4 5
2 4 5 6"
  debug "echo '$default' | $scpc -p under-closed"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [1, 2, 3, 5], [2, 3, 4, 5], [3, 4, 5, 6]]"

  debug "echo '$default' | $scpc -p semi-closed"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [1, 2, 3, 5], [2, 3, 4, 5], [3, 4, 5, 6]]"

  debug "echo '$default' | $scpc -p weakly-closed"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [1, 2, 4, 5], [1, 3, 4, 5], [3, 4, 5, 6]]"

  debug "echo '$default' | $scpc -p chordal"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p closed"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p unit-interval"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [1, 2, 4, 5], [2, 3, 4, 5], [3, 4, 5, 6]]"

  debug "echo '$default' | $scpc -p hamiltonian"
  assert_equal "$status" 3

  debug "echo '$default' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [1, 2, 4, 5], [1, 3, 4, 5], [3, 4, 5, 6]]"

  debug "echo '$default' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 6], [1, 3, 4, 6], [1, 2, 3, 4], [2, 3, 4, 5]]"
end
#######################################
i+=1
start "test traceable and hamiltonian"
  declare matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  7 8 9
  1 8 9
  1 3 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 3, 9], [1, 4, 7]]"

  debug "echo '$matrix' | $scpc -p hamiltonian"
  assert_equal "$status" 3

  matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  3 8 9
  1 8 9
  1 2 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 4, 9], [1, 2, 9], [1, 2, 3], [2, 5, 8]]"

  matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  7 8 9
  1 8 9
  1 2 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 2, 9], [1, 4, 7]]"

  debug "echo '$matrix' | $scpc -p hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 2, 9], [1, 4, 7]]"

  matrix="1 2
  1 3
  2 3
  2 4
  3 4
  3 5
  4 5
  4 6
  5 6
  1 5
  1 6
  2 6"
  debug "echo '$matrix' | $scpc -p traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$matrix' | $scpc -p hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"
end
#######################################
i+=1
start "test weakly-traceable and weakly-hamiltonian"
  declare matrix="1 2 3 4
  2 3 4 5
  5 6 7 8
  1 6 7 10
  1 8 9 10"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 8, 9, 10], [7, 8, 9, 10], [4, 5, 6, 7], [1, 3, 5, 6], [1, 2, 3, 4]]"

  debug "echo '$matrix' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3, 4], [2, 3, 4, 5], [5, 6, 7, 8], [1, 6, 7, 10], [1, 8, 9, 10]]"

  matrix="1 2 3
  1 5 6
  3 4 5"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 3

  debug "echo '$matrix' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [1, 5, 6], [3, 4, 5]]"

  matrix="1 2
  2 3
  3 4
  3 5"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 3

  matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  7 8 9
  1 8 9
  1 3 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 3, 9], [1, 4, 7]]"

  debug "echo '$matrix' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 3, 9], [1, 4, 7]]"

  matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  3 8 9
  1 8 9
  1 2 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 8], [3, 8, 9], [7, 8, 9], [6, 7, 9], [5, 6, 7], [3, 4, 5], [1, 4, 5], [1, 2, 4], [1, 6, 8]]"

  matrix="1 2 3
  2 3 4
  3 4 5
  4 5 6
  5 6 7
  6 7 8
  7 8 9
  1 8 9
  1 2 9
  1 4 7"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 2, 9], [1, 4, 7]]"

  debug "echo '$matrix' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [1, 8, 9], [1, 2, 9], [1, 4, 7]]"

  matrix="1 2
  1 3
  2 3
  2 4
  3 4
  3 5
  4 5
  4 6
  5 6
  1 5
  1 6
  2 6"
  debug "echo '$matrix' | $scpc -p weakly-traceable"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"

  debug "echo '$matrix' | $scpc -p weakly-hamiltonian"
  assert_equal "$status" 0
  assert_startwith "${outlines[0]}" "[[1, 2], [1, 3], [2, 3], [2, 4], [3, 4], [3, 5], [4, 5], [4, 6], [5, 6], [1, 5], [1, 6], [2, 6]]"
end
#######################################
